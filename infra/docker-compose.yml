version: '3.8'
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - dbdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - ./.env

  web:
    # build: 
    #   context: ../backend/foodgram_project
    #   dockerfile: Dockerfile
    image: lorpaxx/foodgram_backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - web

  nginx:
    image: nginx:1.19.3
    # image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - web
      - frontend
  # nginx:
  #   image: nginx:1.19.3
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ../frontend/build:/usr/share/nginx/html/
  #     - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
  #     - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
  #     - static_value:/var/html/static/
  #     - media_value:/var/html/media/
  #   restart: always
  #   depends_on:
  #     - web
  #     - frontend
  # nginx:
  #   image: nginx:1.21.3-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf
  #     - ../frontend/build:/usr/share/nginx/html/
  #     - ../docs/:/usr/share/nginx/html/api/docs/
  #     - static_value:/var/html/static/
  #     - media_value:/var/html/media/
  #   depends_on:
  #     - frontend

volumes:
  static_value:
  media_value:
  dbdata: